name: Scallopy with torch-tensor feature

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SCALLOPDIR: ${{ github.workspace }}
  LD_LIBRARY_PATH: "/opt/intel/oneapi/mkl/latest/lib/intel64:${{ github.env.LD_LIBRARY_PATH }}"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
        python: ["3.10"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH

      - name: Install PyTorch
        run: conda install pytorch::pytorch=2.0.0 -c pytorch

      - name: Install other dependencies
        run: conda install maturin tqdm

      - name: Install MKL
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
          sudo apt-get install -y intel-oneapi-mkl
          python3 -m pip install mkl
          ls /opt/intel/oneapi/mkl/latest/lib/intel64 # Investigating whether the library is successfully installed

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install scallopy with torch tensor features
        run: make install-scallopy-torch

      - name: Test
        run: python3 etc/scallopy/tests/test.py
